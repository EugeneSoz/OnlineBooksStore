// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineBooksStore.Persistence.EF;

namespace OnlineBooksStore.App.WebApi.Migrations
{
    [DbContext(typeof(StoreDbContext))]
    [Migration("20200421122118_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OnlineBooksStore.Persistence.Entities.BookEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Authors");

                    b.Property<string>("BookCover");

                    b.Property<long?>("CategoryId");

                    b.Property<DateTime>("Created");

                    b.Property<string>("Description");

                    b.Property<string>("Language");

                    b.Property<int>("PageCount");

                    b.Property<long?>("PublisherId");

                    b.Property<decimal>("PurchasePrice");

                    b.Property<decimal>("RetailPrice");

                    b.Property<string>("Title");

                    b.Property<DateTime>("Updated");

                    b.Property<int>("Year");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("PublisherId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("OnlineBooksStore.Persistence.Entities.CategoryEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created");

                    b.Property<string>("Name");

                    b.Property<string>("ParentAndChildName");

                    b.Property<long?>("ParentId");

                    b.Property<DateTime>("Updated");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("OnlineBooksStore.Persistence.Entities.OrderEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<DateTime>("Created");

                    b.Property<string>("CustomerName");

                    b.Property<long?>("PaymentId");

                    b.Property<long>("PaynentId");

                    b.Property<bool>("Shipped");

                    b.Property<string>("State");

                    b.Property<DateTime>("Updated");

                    b.Property<string>("ZipCode");

                    b.HasKey("Id");

                    b.HasIndex("PaymentId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("OnlineBooksStore.Persistence.Entities.OrderLineEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created");

                    b.Property<long>("EntityId");

                    b.Property<string>("ItemName");

                    b.Property<long?>("OrderEntityId");

                    b.Property<decimal>("Price");

                    b.Property<int>("Quantity");

                    b.Property<DateTime>("Updated");

                    b.HasKey("Id");

                    b.HasIndex("OrderEntityId");

                    b.ToTable("OrderLineEntity");
                });

            modelBuilder.Entity("OnlineBooksStore.Persistence.Entities.PaymentEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuthCode");

                    b.Property<string>("CardExpiry");

                    b.Property<string>("CardNumber");

                    b.Property<int>("CardSecurityCode");

                    b.Property<DateTime>("Created");

                    b.Property<decimal>("Total");

                    b.Property<DateTime>("Updated");

                    b.HasKey("Id");

                    b.ToTable("PaymentEntity");
                });

            modelBuilder.Entity("OnlineBooksStore.Persistence.Entities.PublisherEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Country");

                    b.Property<DateTime>("Created");

                    b.Property<string>("Name");

                    b.Property<DateTime>("Updated");

                    b.HasKey("Id");

                    b.ToTable("Publishers");
                });

            modelBuilder.Entity("OnlineBooksStore.Persistence.Entities.BookEntity", b =>
                {
                    b.HasOne("OnlineBooksStore.Persistence.Entities.CategoryEntity", "Category")
                        .WithMany("Books")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("OnlineBooksStore.Persistence.Entities.PublisherEntity", "Publisher")
                        .WithMany("Books")
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("OnlineBooksStore.Persistence.Entities.CategoryEntity", b =>
                {
                    b.HasOne("OnlineBooksStore.Persistence.Entities.CategoryEntity", "ParentCategory")
                        .WithMany("ChildrenCategories")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("OnlineBooksStore.Persistence.Entities.OrderEntity", b =>
                {
                    b.HasOne("OnlineBooksStore.Persistence.Entities.PaymentEntity", "Payment")
                        .WithMany()
                        .HasForeignKey("PaymentId");
                });

            modelBuilder.Entity("OnlineBooksStore.Persistence.Entities.OrderLineEntity", b =>
                {
                    b.HasOne("OnlineBooksStore.Persistence.Entities.OrderEntity")
                        .WithMany("Lines")
                        .HasForeignKey("OrderEntityId");
                });
#pragma warning restore 612, 618
        }
    }
}
